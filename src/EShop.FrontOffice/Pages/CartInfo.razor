@page "/cart"
@inject ICartService CartService
@inject INotifierCartService Notifier
<div class="cart-table-area section-padding-100">
    <div class="row">
        <div class="col-12 col-lg-8">
            <div class="cart-title mt-50">
                <h2>Shopping Cart</h2>
            </div>

            <div class="cart-table clearfix">
                <table class="table table-responsive" tabindex="1" style="overflow: hidden; outline: none;">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Quantity</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var line in cartLineVms)
                        {
                            <tr>
                                <td class="cart_product_img">
                                    <a href="#"><img src="@line.Product.ImageUrl" alt="Product"></a>
                                </td>
                                <td class="cart_product_desc">
                                    <h5>@line.Product.Name</h5>
                                </td>
                                <td class="price">
                                    <span>$@line.Product.Price</span>
                                </td>
                                <td class="qty">
                                    <div class="qty-btn d-flex">
                                        <p>Qty</p>
                                        <div class="quantity">
                                            <span class="qty-minus"
                                                  @onclick="(async () => await ReduceItem(line.Product.Id))">
                                                <i class="fa fa-minus" aria-hidden="true" />
                                            </span>
                                            <input type="number"
                                                   @onkeyup="(async (keyEvent) => await SetRangeItem(line.Product,line.Quantity, keyEvent))"
                                                   class="qty-text" id="qty" step="1" min="1" max="300" name="quantity" @bind-value="@line.Quantity">
                                            <span class="qty-plus"
                                                  @onclick="(async () => await AddMoreItem(line.Product))"><i class="fa fa-plus" aria-hidden="true" /></span>
                                            <button class="close remove-cart"
                                                    @onclick="(async () => await RemoveCartLine(line.Product.Id))"
                                                    type="button"
                                                    aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-12 col-lg-4">
            <div class="cart-summary">
                <h5>Cart Total</h5>
                <ul class="summary-table">
                    <li><span>subtotal:</span> <span>$@CartService.ComputeTotalValue()</span></li>
                    <li><span>delivery:</span> <span>Free</span></li>
                    <li><span>total:</span> <span>$@CartService.ComputeTotalValue()</span></li>
                </ul>
                @if (cartLineVms != null && cartLineVms.Any())
                {
                    <div class="cart-btn mt-100">
                        <a href="/Checkout" class="btn amado-btn w-100">Checkout</a>
                    </div>
                }
                else
                {
                    <div class="cart-btn mt-100">
                        <a href="/" class="btn amado-btn w-100">Continue shopping</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {

    private IEnumerable<CartLineVm> cartLineVms { get; set; }

    protected override Task OnInitializedAsync()
    {
        cartLineVms = CartService.Lines();
        return base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await CartService.Reload();
            cartLineVms = CartService.Lines();
            StateHasChanged();
        }
    }

    public async Task AddMoreItem(ProductVm productVm)
    {
        await Notifier.AddCartLine(productVm, 1);
    }

    public async Task SetRangeItem(ProductVm productVm, int quantity, KeyboardEventArgs eventArgs)
    {
        if (eventArgs.Key == "Enter")
        {
            await Notifier.SetRangeCartLine(productVm, quantity);
        }
    }

    public async Task ReduceItem(int productId)
    {
        await Notifier.ReduceCartLine(productId, 1);
    }

    public async Task RemoveCartLine(int productId)
    {
        await Notifier.RemoveCartLine(productId);
    }
}
